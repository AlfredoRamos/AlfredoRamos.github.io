---
# Only the main Sass file needs front matter (the dashes are enough)
---
@charset "utf-8";

// Background colors
$bg-body: #f8f8f8;
$bg-badge: #f5f5f5;

// Foreground colors
$fg-body: #767676;
$fg-link: #069;
$fg-headline: #333;

// Border colors
$br-color: #ccc;

// SVG Icons
$svg-icons: (github, twitter, reddit, vkontakte);

// Column spacing (rem base 10)
// It should be < 4.5rem
$grid-spacing: 1rem; // 10/10

// Convert a given value to integer
// @param	$n		The value to convert
@function parse-int($n) {
	@return $n / ($n * 0 + 1);
}

// Convert given pixels to rems
// @param	$pixels		The pixels to convert
// @param	$base		The rem base (optional).
@function calc-rems($pixels, $base: 10) {
	$rems: #{parse-int($pixels) / $base}rem;

	@if unit($pixels) == 'rem' {
		$rems: $pixels;
	}

	@return $rems;
}

// Convert given rems to pixels
// @param	$rems		The rems to convert
// @param	$base		The rem base (optional).
@function calc-pixels($rems, $base: 10) {
	$pixels: #{parse-int($rems) * $base}px;

	@if unit($rems) == 'px' {
		$pixels: $rems;
	}

	@return $pixels;
}

// Get border radius
@mixin border-radius($radius: 0) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;
}

// Slightly modified version of the rem() mixin by Hugo Giraudel
// http://hugogiraudel.com/2013/03/18/ultimate-rem-mixin/
@mixin rem($property, $values) {
	$px : ();
	$rem: ();

	@each $value in $values {
		@if $value == 0 or $value == auto {
			$px : append($px , $value);
			$rem: append($rem, $value);
		} @else {
			$unit: unit($value);

			@if $unit == 'px' {
				$px : append($px,  calc-pixels($value));
				$rem: append($rem, calc-rems($value));
			}

			@if $unit == 'rem' {
				$px : append($px,  calc-pixels($value));
				$rem: append($rem, calc-rems($value));
			}
		}
	}

	@if $px == $rem {
		#{$property}: $px;
	} @else {
		#{$property}: $px; // For IE < 8
		#{$property}: $rem;
	}
}

// General
body {
	color: $fg-body;
	font-family: 'PT Mono',monospace;
	font-size: 1.2em;
	background-color: $bg-body;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	color: $fg-headline;
}

a {
	&,
	&:visited {
		color: $fg-link;
		text-decoration: none;
	}

	&:hover {
		text-decoration: underline;
	}
}

hr {
	background-color: transparent;
	border-width: 0 0 1px 0;
	border-style: dashed;
	border-color: $br-color;
	width: 98%;
	@include rem(margin-top, $grid-spacing);
	@include rem(margin-bottom, $grid-spacing);
}

#header-wrapper {
	margin-bottom: 0;
	@include rem(margin-top, $grid-spacing * 2);

	header {
		text-align: center;

		h1,
		h2 {
			margin-top: 5px;
			margin-bottom: 5px;
		}

		& .icon {
			vertical-align: text-bottom;
		}

		& > #header-avatar {
			display: inline-block;
			@include border-radius(100%);
		}
	}

	hr {
		margin-bottom: 0;
	}
}

#content-wrapper {
	#content {
		#article-index {
			list-style: none;
			padding: 0;
			margin: 0;

			& .article-title {
				margin: 0;
			}

			& .article-date {
				display: block;
				text-align: right;
			}

			& li {
				border-width: 0 0 1px;
				border-style: dashed;
				border-color: $br-color;
				padding: 7px 0;

				&:last-child {
					border: none;
				}
			}
		}

		.error-page {
			text-align: center;
		}
	}
}

small,
.small {
	@include rem(font-size, $grid-spacing);
}

.list-inline {
	list-style: none;

	&,
	& > li {
		margin: 0;
		padding: 0;
	}

	& > li {
		display: inline-block;
	}
}

.list-with-separator {
	& > li:before {
		content: " / ";
		color: $br-color;
	}

	& > li:first-child:before {
		content: "";
	}
}

.list-categories,
.list-tags {
	padding: 0;
	list-style: none;

	& > li {
		margin: 0 0 10px;

		& > h4 {
			margin: 0;
		}
	}
}

.icon {
	display: inline-block;
	min-width: 16px;
	min-height: 16px;
	background-repeat: no-repeat;
	background-position: 50%;
}

@each $network in $svg-icons {
	.icon-#{$network} {
		background-image: url('../images/#{$network}.svg');
	}
}

.badge {
	background-color: $bg-badge;
	padding: 1px 2px;
	border: 1px solid $br-color;
	@include border-radius(3px);
}

.pagination {
	display: block;
	text-align: center;
	@include rem(margin-bottom, $grid-spacing);
}

#footer-wrapper {
	footer {
		text-align: center;
		@include rem(margin-top, $grid-spacing);
		@include rem(margin-bottom, $grid-spacing);

		.credits {
			margin: 0 0 5px;

			&:last-child {
				margin: 0;
			}
		}
	}
}
