name: Satis

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  schedule:
    # Every month (first day at 00:00)
    - cron: '*/5 * * * *'  #'0 0 1 * *'

env:
  BRANCH: satis
  HUB_PROTOCOL: https
  GITHUB_USER: ${{ github.actor }}
  GITHUB_TOKEN: ${{ secrets.JEKYLL_GITHUB_TOKEN }}
  GITHUB_NAME: 'Alfredo Ramos'
  GITHUB_EMAIL: '4165935+AlfredoRamos@users.noreply.github.com'
  GIT_COMMIT_TITLE: 'Update Satis repository'
  GIT_COMMIT_BODY: ':robot: Automated updates for my public phpBB extensions Satis repository.'

jobs:
  update:
    if: ${{ !contains(github.event.head_commit.message, '[skip satis]') }}
    name: Update repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        id: setup-git
        uses: actions/checkout@master
        with:
          ref: master
          fetch-depth: 0
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          tools: composer:v2
          coverage: none
      - name: Setup environment
        id: setup-env
        run: echo "::set-output name=composer-dir::$(composer config cache-files-dir)"
      - name: Setup Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.setup-env.outputs.composer-dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock', '**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Load SSH key
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SATIS_SSH_KEY }}
      - name: Sync ${{ env.BRANCH }} branch
        run: |
          git checkout -B "${{ env.BRANCH }}"
          hub sync
      - name: Install dependencies
        run: composer update -n --prefer-dist --no-progress
      - name: Update Satis repository
        run: vendor/bin/satis build -n --skip-errors
      - name: Look for changes
        id: git-files
        run: |
          git add .
          git status
          echo "::set-output name=changed::$(git diff --name-only HEAD | wc -l)"
      - name: Commit changes
        if: ${{ steps.git-files.outputs.changed > 0 }}
        id: git-commit
        run: |
          git config --local --replace-all user.name "${{ env.GITHUB_NAME }}"
          git config --local --replace-all user.email "${{ env.GITHUB_EMAIL }}"
          git commit -qam "[${{ env.BRANCH }}] ${{ env.GIT_COMMIT_TITLE }}"
          git push origin -q "${{ env.BRANCH }}"
          echo "::set-output name=pr_exists::$(hub pr list -s open -h ${{ env.BRANCH }} | grep '${{ env.GIT_COMMIT_TITLE }}' | wc -l)"
      - name: Send pull request
        if: ${{ steps.git-files.outputs.changed > 0 && steps.git-commit.outputs.pr_exists == 0 }}
        run: |
          pull_msg="$(printf '${{ env.GIT_COMMIT_TITLE }}\n\n${{ env.GIT_COMMIT_BODY }}')"
          hub pull-request -p -b master -h "${{ env.BRANCH }}" --no-edit -m "${pull_msg}" -l enhancement,dependencies,satis
