name: CI/CD

env:
  HUGO_VERSION: 'latest'
  GO_VERSION: '^1.16.2'
  PHP_VERSION: '8.0'

on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  schedule:
    - cron: '0 0 1 * *' # Every month (first day at 00:00)

jobs:
  test:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') && github.event_name != 'schedule'}}
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@master

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true

      - name: Test Hugo
        run: hugo check ulimit --verbose

  deploy:
    if: ${{ !contains(github.event.head_commit.message, '[skip cd]') && github.event_name == 'push' && success() }}
    name: CD
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@master

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true

      - name: Setup CNAME
        run: cp CNAME static/

      - name: Build site
        run: hugo --gc --cleanDestinationDir --i18n-warnings --path-warnings --verbose

      - name: Deploy site
        if: ${{ success() }}
        uses: peaceiris/actions-gh-pages@v3.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: public
          publish_branch: 'gh-pages'
          force_orphan: true
  cache:
    if: ${{ !contains(github.event.head_commit.message, '[skip cache]') && success() }}
    name: Cache
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@master

      - name: Setup Go cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/go/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum', '**/cloudflare.go') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Clear CloudFlare cache
        working-directory: utils
        env:
          CLOUDFLARE_API_ZONE_ID: ${{ secrets.CLOUDFLARE_API_ZONE_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          go_filename="cloudflare.go"
          bin_filename="$(basename -s '.go' "${go_filename}")"
          if [[ ! -f "${HOME}/go/bin/${bin_filename}" ]]
          then
            go mod tidy
            go install "${go_filename}"
          fi
          "${bin_filename}" -cache clear

  satis:
    if: ${{ !contains(github.event.head_commit.message, '[skip satis]') && github.event_name == 'schedule' }}
    name: Satis
    runs-on: ubuntu-latest
    env:
      BRANCH: satis
      HUB_PROTOCOL: https
      GITHUB_USER: ${{ github.actor }}
      GITHUB_TOKEN: ${{ secrets.JEKYLL_GITHUB_TOKEN }}
      GITHUB_NAME: 'Alfredo Ramos'
      GITHUB_EMAIL: '4165935+AlfredoRamos@users.noreply.github.com'
      GIT_COMMIT_TITLE: 'Update Satis repository'
      GIT_COMMIT_BODY: ':robot: Automated updates for my public phpBB extensions Satis repository.'
    steps:
      - name: Checkout source
        uses: actions/checkout@master
        with:
          ref: master
          token: ${{ env.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer:v2
          coverage: none

      - name: Setup environment
        id: setup-env
        run: echo "::set-output name=composer-dir::$(composer config cache-files-dir)"

      - name: Setup Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.setup-env.outputs.composer-dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock', '**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Load SSH key
        uses: webfactory/ssh-agent@v0.5.1
        with:
          ssh-private-key: ${{ secrets.SATIS_SSH_KEY }}

      - name: Sync ${{ env.BRANCH }} branch
        run: |
          remote_exists=$(git ls-remote --exit-code -h origin "${BRANCH}" | wc -l)
          local_exists=$(git branch --list satis | wc -l)
          if (( $local_exists > 0 && $remote_exists > 0 ))
          then
            git checkout "${BRANCH}"
            git merge --ff-only origin/"${BRANCH}"
          elif (( $local_exists == 0 && $remote_exists > 0 ))
          then
            git checkout -b "${BRANCH}" origin/"${BRANCH}"
          elif (( $local_exists > 0 && $remote_exists == 0 ))
          then
            git branch -qD "${BRANCH}"
            git checkout -b "${BRANCH}"
          else
            git checkout -b "${BRANCH}"
          fi

      - name: Install dependencies
        run: composer update -n --prefer-dist --no-progress

      - name: Update Satis repository
        run: vendor/bin/satis build -nv --skip-errors

      - name: Look for changes
        id: git-files
        run: |
          git add .
          git status
          echo "::set-output name=changed::$(git diff --name-only HEAD | wc -l)"

      - name: Commit changes
        id: git-commit
        if: ${{ steps.git-files.outputs.changed > 0 }}
        run: |
          git config --local --replace-all user.name "${GITHUB_NAME}"
          git config --local --replace-all user.email "${GITHUB_EMAIL}"
          git commit -qam "[${BRANCH}] ${GIT_COMMIT_TITLE}"
          git push origin -q "${BRANCH}"
          echo "::set-output name=pr-exists::$(hub pr list -s open -h ${BRANCH} | grep '${GIT_COMMIT_TITLE}' | wc -l)"

      - name: Send pull request
        if: ${{ steps.git-files.outputs.changed > 0 && steps.git-commit.outputs.pr-exists == 0 }}
        run: |
          pull_msg="$(printf '%s\n\n%s' "${GIT_COMMIT_TITLE}" "${GIT_COMMIT_BODY}")"
          hub pull-request -p -b master -h "${BRANCH}" --no-edit -m "${pull_msg}" -l enhancement,dependencies,satis
